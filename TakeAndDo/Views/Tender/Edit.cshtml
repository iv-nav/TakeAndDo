@model TakeAndDo.Models.Tender

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Tender</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="btn-group" role="group">
        <button type="submit" class="btn btn-default" autofocus>Save</button>
        <a href="@Url.Action("Index")"><button class="btn">Back</button></a>
    </div>

    <div class="col-md-12">

        <div class="form-group">
            @Html.LabelFor(model => model.Credits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Credits, new { htmlAttributes = new { @class = "form-control", style = "max-width:100%" } })
                @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control", style = "max-width:100%" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="col-md-6">

        <div class="form-group">
            @Html.LabelFor(model => model.TenderTypeId, "TenderTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenderTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenderTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockId, "StockId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StockId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, "RegionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RegionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenderCategoryId, "TenderCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenderCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenderCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParticipationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParticipationDate, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="col-md-6">

        <div class="form-group">
            @Html.LabelFor(model => model.CompletionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompletionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompletionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InitMaxContractPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InitMaxContractPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InitMaxContractPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinEstimatedPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinEstimatedPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinEstimatedPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VatIncludePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VatIncludePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VatIncludePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtraCharge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtraCharge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtraCharge, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div>
        <div>
            <table class="table" id="agents-list">
                <tr>
                    <th>
                        <p>Агенты</p>
                        <div class="btn-group" role="group">
                            @Html.ActionLink("Добавить", "AddAgent", new { Model.ID })
                        </div>
                    </th>
                </tr>

                @*Проблема пропадающего первого элемента*@
                @using (Html.BeginForm("Edit", "Tender", null, FormMethod.Get))
                {
                }

                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Agent.Name)
                        </td>
                        <td>
                            @using (Html.BeginForm("RemoveOrder", "Tender", new { id = @item.OrderId }, FormMethod.Post))
                            {
                                <input type="submit" value="Удалить" />
                            }
                            @*@Html.ActionLink("Удалить", "RemoveAgent", new { item.OrderId })*@
                            @*<input type="button" class="order-remove-button" data-order-id = @Html.DisplayFor(modelItem => item.OrderId)  value="Удалить" />*@
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    </div>
 }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        <script>
            $("input[data-val-number$=' must be a number.']").change(function () {
                let currentValue = $(this).val();
                $(this).val(currentValue.replace(',', '.'));
            });
        </script>
        @Scripts.Render("~/bundles/jqueryval")

    }
